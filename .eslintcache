[{"/home/cortica/Desktop/js/my-app/src/TreeExample.js":"1","/home/cortica/Desktop/js/my-app/src/ConfigClass.js":"2","/home/cortica/Desktop/js/my-app/src/index.js":"3"},{"size":1821,"mtime":1608803769413,"results":"4","hashOfConfig":"5"},{"size":1213,"mtime":1609665509131,"results":"6","hashOfConfig":"5"},{"size":596,"mtime":1609454342887,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"18s743n",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cortica/Desktop/js/my-app/src/TreeExample.js",["15","16","17"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport { render } from '@testing-library/react';\n\n\nconst useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n});\n\nexport default function TreeExample() {\n  const classes = useStyles();\n  const [config, setConfig] = useState(require('./config.json'));\n\n  const x = config[\"LOGS\"][\"server_selection_timeout\"];\n  console.log(typeof x)\n  /*const renderTree = (nodes) => (\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n      {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\n    </TreeItem>\n  );*/\n\n  const renderT = (nodes, level) => {\n      if (typeof(nodes) != 'object'){\n          return (<TreeItem key={nodes} nodeId={level++} label={nodes}>nodes</TreeItem>)\n      } else{\n          return Object.keys(nodes).map(i => {\n            return (<TreeItem key={i} nodeId={level++} label={i}>\n                    {renderT(i,level)}\n                  </TreeItem>)})\n      }\n  }\n\n  const renderTree = (nodes, level) =>{\n      console.log(nodes)\n      return Object.keys(nodes).map(i => {\n          return (<TreeItem key={i} nodeId={level++} label={i}>\n              {typeof nodes[i] == 'object' ? renderTree(nodes[i],level++) : null}\n                </TreeItem>)})\n  };\n\n  return (\n\n    <TreeView\n      className={classes.root}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpanded={['root']}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      {renderT(config,1)}\n    </TreeView>\n\n  );\n}\n\n","/home/cortica/Desktop/js/my-app/src/ConfigClass.js",[],"/home/cortica/Desktop/js/my-app/src/index.js",["18","19"],{"ruleId":"20","severity":1,"message":"21","line":7,"column":10,"nodeType":"22","messageId":"23","endLine":7,"endColumn":16},{"ruleId":"20","severity":1,"message":"24","line":20,"column":18,"nodeType":"22","messageId":"23","endLine":20,"endColumn":27},{"ruleId":"20","severity":1,"message":"25","line":45,"column":46,"nodeType":"22","messageId":"23","endLine":45,"endColumn":56},{"ruleId":"20","severity":1,"message":"26","line":4,"column":8,"nodeType":"22","messageId":"23","endLine":4,"endColumn":11},{"ruleId":"20","severity":1,"message":"27","line":5,"column":8,"nodeType":"22","messageId":"23","endLine":5,"endColumn":19},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'setConfig' is assigned a value but never used.","'renderTree' is assigned a value but never used.","'App' is defined but never used.","'TreeExample' is defined but never used."]